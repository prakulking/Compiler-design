%{
#include <stdio.h>
int char_count = 0, word_count = 0, line_count = 0;
int in_word = 0;
#define MAX_IDENTIFIER_LEN 255
%}

%%

"/*"([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*"*+/"    { /* Ignore comments */ }

[ \t\n]+                                       { /* Ignore spaces, tabs, and new lines */
    if (yytext[0] == '\n') line_count++;
    for(int i = 0; yytext[i]; i++) char_count++;
    in_word = 0;
}

[a-zA-Z_][a-zA-Z0-9_]*                         { /* Identifiers */
    if (yyleng > MAX_IDENTIFIER_LEN) {
        yytext[MAX_IDENTIFIER_LEN] = '\0';
    }
    word_count++;
    char_count += yyleng;
    in_word = 1;
}

.                                               { /* Catch all other characters */
    char_count++;
    if (!in_word) {
        word_count++;
        in_word = 1;
    }
}

%%

int main(int argc, char *argv[]) {
    if (argc > 1) {
        FILE *file = fopen(argv[1], "r");
        if (!file) {
            perror("Cannot open file");
            return 1;
        }
        yyin = file;
    }
    yylex();
    if (in_word) word_count++;
    printf("Characters: %d\n", char_count);
    printf("Words: %d\n", word_count);
    printf("Lines: %d\n", line_count + 1); // +1 to count the last line if no newline
    return 0;
}

int yywrap() {
    return 1;
}
